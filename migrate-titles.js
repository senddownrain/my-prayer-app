const { initializeApp } = require("firebase/app");
const { getFirestore, collection, getDocs, updateDoc, doc, deleteField } = require("firebase/firestore");

// –¢–∞ –∂–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è, —á—Ç–æ –∏ –≤ –¥—Ä—É–≥–∏—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–∞—Ö
const firebaseConfig = {
  apiKey: "AIzaSyDF2TD4MTcKiBChKRssauvL-nNyT4Am9N0",
  authDomain: "molitwy.firebaseapp.com",
  projectId: "molitwy",
  storageBucket: "molitwy.firebasestorage.app",
  messagingSenderId: "654293224787",
  appId: "1:654293224787:web:5f4fce64abf5ba1b1ea5a6"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

/**
 * –†–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—è 'title' –≤ 'titleVersions.be'
 */
async function migrateTitles() {
  console.log("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤...");
  const itemsCollection = collection(db, 'items');
  let processedCount = 0;
  let skippedCount = 0;

  try {
    const snapshot = await getDocs(itemsCollection);

    if (snapshot.empty) {
      console.log("–ö–æ–ª–ª–µ–∫—Ü–∏—è 'items' –ø—É—Å—Ç–∞. –ù–µ—á–µ–≥–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å.");
      return;
    }

    console.log(`–ù–∞–π–¥–µ–Ω–æ ${snapshot.size} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.`);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Promise.all –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    const updatePromises = [];

    for (const docSnapshot of snapshot.docs) {
      const data = docSnapshot.data();
      const docId = docSnapshot.id;

      // --- –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê ---
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –ø–æ–ª–µ 'title'
      // –∏ –ù–ï–¢ –ø–æ–ª—è 'titleVersions', —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ç–µ—Ä–µ—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
      if (data.title && typeof data.title === 'string' && !data.titleVersions) {
        
        const oldTitle = data.title;
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–∏—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
        const updatePromise = updateDoc(doc(db, 'items', docId), {
          titleVersions: {
            be: oldTitle // –ü–µ—Ä–µ–Ω–æ—Å–∏–º —Å—Ç–∞—Ä—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –±–µ–ª–æ—Ä—É—Å—Å–∫—É—é –≤–µ—Ä—Å–∏—é
          },
          title: deleteField() // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ 'title'
        });

        updatePromises.push(updatePromise);
        console.log(`  [–û–ë–†–ê–ë–û–¢–ö–ê] –î–æ–∫—É–º–µ–Ω—Ç '${docId}' –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω. Title: "${oldTitle}"`);
        processedCount++;

      } else {
        console.log(`  [–ü–†–û–ü–£–°–ö] –î–æ–∫—É–º–µ–Ω—Ç '${docId}' —É–∂–µ –∏–º–µ–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –ø–æ–ª—è title.`);
        skippedCount++;
      }
    }

    // –î–æ–∂–∏–¥–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    await Promise.all(updatePromises);

    console.log("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    console.log(`   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${processedCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.`);
    console.log(`   - –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.`);

  } catch (error) {
    console.error("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏:", error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
migrateTitles();